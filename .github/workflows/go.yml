# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI-CD-Admin
env:
  PACKAGE_NAME: "admin-application-packages"
  APPLICATION_NAME: "MyAdmin"
  ENVIRONMENT_NAME: "MyAdmin-env"
  DEPLOY_PACKAGES_NAME: "app_${{ github.sha }}.zip"
  REGION_NAME: "us-west-1"

on:
  push:
    branches:
      -main
jobs:
  my_ci_part:
    runs-on: ubuntu-latest
    steps:
      -name1: Git clone our repo
        uses: actions/checkout@v1

      -name2: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGES_NAME }} ./ -x *.git*
        -name4: Copy Deployment package to HS
          run: hs cp ${{ env.DEPLOY_PACKAGES_NAME }}  hs://${{ env.PACKAGE_NAME}}/

  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]

    steps:
      -name2: Create new ElasticBeanstalk Application
        run:
          hs elasticbeanstalk create application-version \
          --application-name ${{ env.APPLICATION_NAME }} \
          --source-bundle HS="${{ env.PACKAGE_NAME }}", HSKey="${{ env.DEPLOY_PACKAGES_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"

      -name3: Deploy new ElasticBeanstalk Application Version
        run: hs elasticbeanstalk update-environment --environment-name ${{ env.ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
